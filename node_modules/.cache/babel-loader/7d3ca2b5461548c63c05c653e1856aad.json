{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DIGIGOD\\\\Desktop\\\\projects\\\\contactlist\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport \"./styles.css\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faCoffee, faEnvelope } from '@fortawesome/fontawesome-free-solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      setContacts(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n      avatar: contact.picture,\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n      address: contact.address.suite + ',' + contact.address.street + \",\" + contact.address.city + \",\" + contact.address.zipcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n\n_c = App;\n\nconst ContactCard = props => {\n  _s2();\n\n  const [showNum, setShowNum] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEnvelope\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 12\n        }, this), \" Name: \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", props.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"info\",\n        onClick: () => setShowNum(!showNum),\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), showNum && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", props.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", props.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ContactCard, \"SJYbOxx1LRPEMZj5py2BUU48D8U=\");\n\n_c2 = ContactCard;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ContactCard\");","map":{"version":3,"sources":["C:/Users/DIGIGOD/Desktop/projects/contactlist/my-app/src/App.js"],"names":["React","FontAwesomeIcon","faCheckSquare","faCoffee","faEnvelope","App","contacts","setContacts","useState","useEffect","fetch","then","response","json","data","map","contact","picture","name","email","phone","address","suite","street","city","zipcode","ContactCard","props","showNum","setShowNum"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,qCAApD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAhC;AACAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KAJH;AAKD,GAND,EAMG,EANH;AAQA,sBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,cACCR,QAAQ,CAACS,GAAT,CAAaC,OAAO,iBACjB,QAAC,WAAD;AACI,MAAA,MAAM,EAAEA,OAAO,CAACC,OADpB;AAEI,MAAA,IAAI,EAAED,OAAO,CAACE,IAFlB;AAGI,MAAA,KAAK,EAAEF,OAAO,CAACG,KAHnB;AAII,MAAA,KAAK,EAAEH,OAAO,CAACI,KAJnB;AAKI,MAAA,OAAO,EAAEJ,OAAO,CAACK,OAAR,CAAgBC,KAAhB,GAAsB,GAAtB,GAA0BN,OAAO,CAACK,OAAR,CAAgBE,MAA1C,GAAiD,GAAjD,GAAqDP,OAAO,CAACK,OAAR,CAAgBG,IAArE,GAA0E,GAA1E,GAA8ER,OAAO,CAACK,OAAR,CAAgBI;AAL3G;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;GAAMpB,G;;KAAAA,G;;AAyBN,MAAMqB,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA9B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,gCAAG,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAH,aAAgDuB,KAAK,CAACT,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWS,KAAK,CAACR,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAG,MAApB;AAA2B,QAAA,OAAO,EAAE,MAAMU,UAAU,CAAC,CAACD,OAAF,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAMGA,OAAO,iBACR;AAAA,gCACE;AAAA,gCAAWD,KAAK,CAACP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEA;AAAA,kCAAaO,KAAK,CAACN,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApBD;;IAAMK,W;;MAAAA,W;AAqBN,eAAerB,GAAf","sourcesContent":["import './App.css';\nimport \"./styles.css\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faCoffee, faEnvelope } from '@fortawesome/fontawesome-free-solid'\n\nconst App = () => {\n  const [contacts, setContacts] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(data => {\n        setContacts(data);\n      });\n  }, []);\n\n  return (\n    <div className = \"container\">\n    {contacts.map(contact => (\n        <ContactCard\n            avatar={contact.picture}\n            name={contact.name}\n            email={contact.email}\n            phone={contact.phone}\n            address={contact.address.suite+','+contact.address.street+\",\"+contact.address.city+\",\"+contact.address.zipcode}\n        />\n      ))}\n    </div> \n  );\n}\n\nconst ContactCard = props => {\n  const [showNum, setShowNum] = React.useState(false);\n  return (\n    <div className=\"contact-card\">\n      {/* <img src={props.avatar} alt=\"profile\" /> */}\n      <div className=\"user-details\">\n        <p><FontAwesomeIcon icon={faEnvelope} /> Name: {props.name}</p>\n        <p>Email: {props.email}</p>\n        <button className = \"info\" onClick={() => setShowNum(!showNum)}>\n          More Info\n        </button >\n        {showNum &&\n        <div>\n          <p>Phone: {props.phone}</p>\n        <p>Address: {props.address}</p>\n        </div>}\n      </div>\n    </div>\n    \n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}